{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "User Management",
    "description": "Rest API for user management!"
  },
  "servers": [
    {
      "url": "http://localhost:4000",
      "description": "Web API Server"
    }
  ],
  "paths": {
    "/sessions/": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "User session successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionUserResponse"
                },
                "examples": {
                  "UserSessionSuccessfully": {
                    "$ref": "#/components/examples/SessionUserResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Celebrate Errors And Credentials Invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CelebrateErrors"
                },
                "examples": {
                  "CelebrateBodyEmailRequired": {
                    "$ref": "#/components/examples/CelebrateUserEmailRequiredErrorResponse"
                  },
                  "CelebrateBodyNameRequired": {
                    "$ref": "#/components/examples/CelebrateUserNameRequiredErrorResponse"
                  },
                  "CredentialsInvalid": {
                    "$ref": "#/components/examples/CredentialsInvalid"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalError"
                },
                "examples": {
                  "InternalServerError": {
                    "$ref": "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SessionUserRequest"
              },
              "examples": {
                "UpdateUserRequest": {
                  "$ref": "#/components/examples/SessionUserRequest"
                }
              }
            }
          }
        }
      }
    },
    "/sessions/refresh": {
      "put": {
        "tags": [
          "Authentication"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "Token User refreshed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshUserTokenResponse"
                },
                "examples": {
                  "TokenUserRefreshedSuccessfully": {
                    "$ref": "#/components/examples/RefreshUserTokenResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Celebrate Errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CelebrateErrors"
                },
                "examples": {
                  "CelebrateBodyRefreshToken": {
                    "$ref": "#/components/examples/CelebrateRefreshTokenRequiredErrorResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Auth Tokens Errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalError"
                },
                "examples": {
                  "AuthTokenNotFound": {
                    "$ref": "#/components/examples/AuthTokenNotFound"
                  },
                  "InvalidTokenFormat": {
                    "$ref": "#/components/examples/InvalidTokenFormat"
                  },
                  "InvalidToken": {
                    "$ref": "#/components/examples/InvalidToken"
                  },
                  "JwtMalformed": {
                    "$ref": "#/components/examples/JwtMalformed"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalError"
                },
                "examples": {
                  "InternalServerError": {
                    "$ref": "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshUserTokenRequest"
              },
              "examples": {
                "RefreshUserTokenRequest": {
                  "$ref": "#/components/examples/RefreshUserTokenRequest"
                }
              }
            }
          }
        }
      }
    },
    "/users/": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "",
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateUserResponse"
                },
                "examples": {
                  "UserCreatedSuccessfully": {
                    "$ref": "#/components/examples/CreateUserResponse"
                  }
                }
              }
            }
          },
          "302": {
            "description": "Email already in use",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalError"
                },
                "examples": {
                  "EmailAlreadyInUse": {
                    "$ref": "#/components/examples/EmailAlreadyInUse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Celebrate Errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CelebrateErrors"
                },
                "examples": {
                  "CelebrateBodyEmailRequired": {
                    "$ref": "#/components/examples/CelebrateUserEmailRequiredErrorResponse"
                  },
                  "CelebrateUserPasswordRequired": {
                    "$ref": "#/components/examples/CelebrateUserPasswordRequiredErrorResponse"
                  },
                  "CelebrateBodyNameRequired": {
                    "$ref": "#/components/examples/CelebrateUserNameRequiredErrorResponse"
                  },
                  "CelebrateBodyPassword": {
                    "$ref": "#/components/examples/CelebrateUserPasswordErrorResponse"
                  },
                  "CelebrateBodyName": {
                    "$ref": "#/components/examples/CelebrateUserNameErrorResponse"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalError"
                },
                "examples": {
                  "InternalServerError": {
                    "$ref": "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              },
              "examples": {
                "CreateUserRequest": {
                  "$ref": "#/components/examples/CreateUserRequest"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "User"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "User(s) found successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "$ref": "#/components/schemas/GetAllUserRequest"
                },
                "examples": {
                  "User(s)FoundSuccessfully": {
                    "type": "array",
                    "$ref": "#/components/examples/GetAllUserResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Auth Tokens Errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalError"
                },
                "examples": {
                  "AuthTokenNotFound": {
                    "$ref": "#/components/examples/AuthTokenNotFound"
                  },
                  "InvalidTokenFormat": {
                    "$ref": "#/components/examples/InvalidTokenFormat"
                  },
                  "InvalidToken": {
                    "$ref": "#/components/examples/InvalidToken"
                  },
                  "JwtMalformed": {
                    "$ref": "#/components/examples/JwtMalformed"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalError"
                },
                "examples": {
                  "NotFound": {
                    "$ref": "#/components/examples/NotFound"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalError"
                },
                "examples": {
                  "InternalServerError": {
                    "$ref": "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/users/{userId}": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User found successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserRequest"
                },
                "examples": {
                  "UserFoundSuccessfully": {
                    "$ref": "#/components/examples/GetUserResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Celebrate Params Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CelebrateErrors"
                },
                "examples": {
                  "CelebrateParamsError": {
                    "$ref": "#/components/examples/CelebrateParamsErrorResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Auth Tokens Errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalError"
                },
                "examples": {
                  "AuthTokenNotFound": {
                    "$ref": "#/components/examples/AuthTokenNotFound"
                  },
                  "InvalidTokenFormat": {
                    "$ref": "#/components/examples/InvalidTokenFormat"
                  },
                  "InvalidToken": {
                    "$ref": "#/components/examples/InvalidToken"
                  },
                  "JwtMalformed": {
                    "$ref": "#/components/examples/JwtMalformed"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalError"
                },
                "examples": {
                  "NotFound": {
                    "$ref": "#/components/examples/NotFound"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalError"
                },
                "examples": {
                  "InternalServerError": {
                    "$ref": "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "User"
        ],
        "description": "",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserResponse"
                },
                "examples": {
                  "UserUpdatedSuccessfully": {
                    "$ref": "#/components/examples/UpdateUserResponse"
                  }
                }
              }
            }
          },
          "302": {
            "description": "Email already in use",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalError"
                },
                "examples": {
                  "EmailAlreadyInUse": {
                    "$ref": "#/components/examples/EmailAlreadyInUse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Celebrate Errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CelebrateErrors"
                },
                "examples": {
                  "CelebrateParams": {
                    "$ref": "#/components/examples/CelebrateParamsErrorResponse"
                  },
                  "CelebrateBodyEmailRequired": {
                    "$ref": "#/components/examples/CelebrateUserEmailRequiredErrorResponse"
                  },
                  "CelebrateBodyNameRequired": {
                    "$ref": "#/components/examples/CelebrateUserNameRequiredErrorResponse"
                  },
                  "CelebrateBodyPassword": {
                    "$ref": "#/components/examples/CelebrateUserPasswordErrorResponse"
                  },
                  "CelebrateBodyName": {
                    "$ref": "#/components/examples/CelebrateUserNameErrorResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Auth Tokens Errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalError"
                },
                "examples": {
                  "AuthTokenNotFound": {
                    "$ref": "#/components/examples/AuthTokenNotFound"
                  },
                  "InvalidTokenFormat": {
                    "$ref": "#/components/examples/InvalidTokenFormat"
                  },
                  "InvalidToken": {
                    "$ref": "#/components/examples/InvalidToken"
                  },
                  "JwtMalformed": {
                    "$ref": "#/components/examples/JwtMalformed"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalError"
                },
                "examples": {
                  "InternalServerError": {
                    "$ref": "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              },
              "examples": {
                "UpdateUserRequest": {
                  "$ref": "#/components/examples/UpdateUserRequest"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "description": "",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserRequest"
                },
                "examples": {
                  "UserDeletedSuccessfully": {
                    "$ref": "#/components/examples/GetUserResponse"
                  }
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Celebrate Errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CelebrateErrors"
                },
                "examples": {
                  "CelebrateParams": {
                    "$ref": "#/components/examples/CelebrateParamsErrorResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Auth Tokens Errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalError"
                },
                "examples": {
                  "AuthTokenNotFound": {
                    "$ref": "#/components/examples/AuthTokenNotFound"
                  },
                  "InvalidTokenFormat": {
                    "$ref": "#/components/examples/InvalidTokenFormat"
                  },
                  "InvalidToken": {
                    "$ref": "#/components/examples/InvalidToken"
                  },
                  "JwtMalformed": {
                    "$ref": "#/components/examples/JwtMalformed"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalError"
                },
                "examples": {
                  "NotFound": {
                    "$ref": "#/components/examples/NotFound"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalError"
                },
                "examples": {
                  "InternalServerError": {
                    "$ref": "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "GetAllUserRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "uuid"
          },
          "email": {
            "type": "string",
            "example": "E-mail"
          },
          "name": {
            "type": "string",
            "example": "Name"
          }
        }
      },
      "GetUserRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "uuid"
          },
          "email": {
            "type": "string",
            "example": "E-mail"
          },
          "name": {
            "type": "string",
            "example": "Name"
          }
        }
      },
      "CreateUserRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "E-mail"
          },
          "password": {
            "type": "string",
            "example": "Password"
          },
          "name": {
            "type": "string",
            "example": "Name"
          }
        },
        "required": [
          "email",
          "password",
          "name"
        ]
      },
      "UpdateUserRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "E-mail"
          },
          "password": {
            "type": "string",
            "example": "Password"
          },
          "name": {
            "type": "string",
            "example": "Name"
          }
        },
        "required": [
          "email",
          "name"
        ]
      },
      "CreateUserResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "uuid"
          },
          "email": {
            "type": "string",
            "example": "E-mail"
          },
          "name": {
            "type": "string",
            "example": "Name"
          }
        }
      },
      "UpdateUserResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "uuid"
          },
          "email": {
            "type": "string",
            "example": "E-mail"
          },
          "name": {
            "type": "string",
            "example": "Name"
          }
        }
      },
      "SessionUserResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "example": "uuid"
              },
              "email": {
                "type": "string",
                "example": "E-mail"
              },
              "name": {
                "type": "string",
                "example": "Name"
              }
            }
          },
          "token": {
            "type": "string",
            "example": "token"
          },
          "refreshToken": {
            "type": "string",
            "example": "refreshToken"
          }
        }
      },
      "CelebrateErrors": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "string",
            "example": "Status Code"
          },
          "error": {
            "type": "string",
            "example": "Message error"
          },
          "message": {
            "type": "string",
            "example": "Message"
          },
          "validation": {
            "type": "object",
            "properties": {
              "params": {
                "type": "object",
                "properties": {
                  "source": {
                    "type": "string",
                    "example": "source"
                  },
                  "keys": {
                    "type": "string",
                    "example": "[\"keys\"]"
                  },
                  "message": {
                    "type": "string",
                    "example": "\"keys\" message"
                  }
                }
              }
            }
          }
        }
      },
      "GlobalError": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "Status Code Message"
          },
          "message": {
            "type": "string",
            "example": "Message Error"
          }
        }
      },
      "SessionUserRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "Email"
          },
          "password": {
            "type": "string",
            "example": "Password"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "RefreshUserTokenRequest": {
        "type": "object",
        "properties": {
          "refreshToken": {
            "type": "string",
            "example": "Refresh Token"
          }
        },
        "required": [
          "refreshToken"
        ]
      },
      "RefreshUserTokenResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "example": "Token"
          },
          "refreshToken": {
            "type": "string",
            "example": "Refresh Token"
          }
        }
      }
    },
    "examples": {
      "GetAllUserResponse": {
        "value": {
          "id": "ccc36944-e633-41c0-a119-2616cb70968d",
          "email": "johndoe@gmail.com",
          "name": "John Doe"
        }
      },
      "GetUserResponse": {
        "value": {
          "id": "ccc36944-e633-41c0-a119-2616cb70968d",
          "email": "johndoe@gmail.com",
          "name": "John Doe"
        }
      },
      "CreateUserRequest": {
        "value": {
          "$email": "johndoe@gmail.com",
          "$password": "123456JohnDoe",
          "$name": "John Doe"
        }
      },
      "UpdateUserRequest": {
        "value": {
          "$email": "johndoe2@gmail.com",
          "password": "JohnDoe123456",
          "$name": "John Doe 2.0"
        }
      },
      "CreateUserResponse": {
        "value": {
          "id": "ccc36944-e633-41c0-a119-2616cb70968d",
          "email": "johndoe@gmail.com",
          "name": "John Doe"
        }
      },
      "UpdateUserResponse": {
        "value": {
          "id": "ccc36944-e633-41c0-a119-2616cb70968d",
          "email": "johndoe2@gmail.com",
          "name": "John Doe 2.0"
        }
      },
      "InternalServerError": {
        "value": {
          "status": "Internal Server Error",
          "message": "internal-server-error"
        }
      },
      "EmailAlreadyInUse": {
        "value": {
          "status": "Founded",
          "message": "email-already-in-use"
        }
      },
      "AuthTokenNotFound": {
        "value": {
          "status": "Unauthorized",
          "message": "auth-token-not-found"
        }
      },
      "InvalidToken": {
        "value": {
          "status": "Unauthorized",
          "message": "invalid token"
        }
      },
      "JwtMalformed": {
        "value": {
          "status": "Unauthorized",
          "message": "jwt malformed"
        }
      },
      "InvalidTokenFormat": {
        "value": {
          "status": "Unauthorized",
          "message": "invalid-token-format"
        }
      },
      "NotFound": {
        "value": {
          "status": "Not Found",
          "message": "user-not-found"
        }
      },
      "CelebrateParamsErrorResponse": {
        "value": {
          "statusCode": 400,
          "error": "Bad Request",
          "message": "Validation failed",
          "validation": {
            "params": {
              "source": "params",
              "keys": "[\"userId\"]",
              "message": "\"userId\" must be a valid GUID"
            }
          }
        }
      },
      "CelebrateUserEmailRequiredErrorResponse": {
        "value": {
          "statusCode": 400,
          "error": "Bad Request",
          "message": "Validation failed",
          "validation": {
            "params": {
              "source": "body",
              "keys": "[\"email\"]",
              "message": "\"email\" is required"
            }
          }
        }
      },
      "CelebrateRefreshTokenRequiredErrorResponse": {
        "value": {
          "statusCode": 400,
          "error": "Bad Request",
          "message": "Validation failed",
          "validation": {
            "params": {
              "source": "body",
              "keys": "[\"refreshToken\"]",
              "message": "\"refreshToken\" is required"
            }
          }
        }
      },
      "CelebrateUserPasswordRequiredErrorResponse": {
        "value": {
          "statusCode": 400,
          "error": "Bad Request",
          "message": "Validation failed",
          "validation": {
            "params": {
              "source": "body",
              "keys": "[\"password\"]",
              "message": "\"password\" is required"
            }
          }
        }
      },
      "CelebrateUserNameRequiredErrorResponse": {
        "value": {
          "statusCode": 400,
          "error": "Bad Request",
          "message": "Validation failed",
          "validation": {
            "params": {
              "source": "body",
              "keys": "[\"name\"]",
              "message": "\"name\" is required"
            }
          }
        }
      },
      "CelebrateUserPasswordErrorResponse": {
        "value": {
          "statusCode": 400,
          "error": "Bad Request",
          "message": "Validation failed",
          "validation": {
            "params": {
              "source": "body",
              "keys": "[\"password\"]",
              "message": "\"password\" length must be at least 8 characters long"
            }
          }
        }
      },
      "CelebrateUserNameErrorResponse": {
        "value": {
          "statusCode": 400,
          "error": "Bad Request",
          "message": "Validation failed",
          "validation": {
            "params": {
              "source": "body",
              "keys": "[\"name\"]",
              "message": "\"name\" length must be less than or equal to 30 characters long"
            }
          }
        }
      },
      "CredentialsInvalid": {
        "value": {
          "status": "Bad Request",
          "message": "invalid-credentials"
        }
      },
      "SessionUserRequest": {
        "value": {
          "$email": "johndoe@gmail.com",
          "$password": "Johndoe356"
        }
      },
      "SessionUserResponse": {
        "value": {
          "user": {
            "id": "ccc36944-e633-41c0-a119-2616cb70968d",
            "email": "johndoe@gmail.com",
            "name": "John Doe"
          },
          "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE3MDEzNjExMDAsImV4cCI6MTcwMTQ0NzUwMCwic3ViIjoiYjg5MjBlZDQtZjgzZi00NjUzLTgzYmUtNzRkODVjYTA3NTQ5In0.lkROMDwg8CQ5dqprfFSjqW8E-XtextkDeuVQyRglwmU",
          "refreshToken": "4faaab56-b640-42c4-9fcd-1d31cd89b991"
        }
      },
      "RefreshUserTokenRequest": {
        "value": {
          "$refreshToken": "4faaab56-b640-42c4-9fcd-1d31cd89b991"
        }
      },
      "RefreshUserTokenResponse": {
        "value": {
          "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE3MDEzNjA3MTUsImV4cCI6MTcwMTQ0NzExNSwic3ViIjoiYjg5MjBlZDQtZjgzZi00NjUzLTgzYmUtNzRkODVjYTA3NTQ5In0.ODiPSE6b2ZNpzDyeuIl3GKhs_i8uDWtdKo6kj3SwwVI",
          "refreshToken": "545714d4-e0ea-42b2-ab54-7fddd261f061"
        }
      }
    }
  }
}